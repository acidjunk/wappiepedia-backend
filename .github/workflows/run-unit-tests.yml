name: Unit tests
on: push

jobs:
  container_job:
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.9 ]
    container: python:3.9-slim
    services:
      postgres:
        image: postgres:12.7-alpine
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: wappiepedia
          POSTGRES_USER: wappiepedia
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          apt update
          apt install curl -y
          pip install -r requirements/test.txt
#          python -m pip install --upgrade pip
#          pip install flit
#          flit install --deps develop --symlink
#          echo "GIT_COMMIT_HASH=\"test\"" > orchestrator/version.py
      - name: Run Unit tests
        run: PYTHONPATH=. DATABASE_URI=postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST/$POSTGRES_DB  pytest --cov-branch --cov=server
        env:
          POSTGRES_DB: wappiepedia-test
          POSTGRES_USER: wappiepedia
          POSTGRES_PASSWORD: wappiepedia
          POSTGRES_HOST: postgres
#      - name: "Upload coverage to Codecov"
#        uses: codecov/codecov-action@v1
#        with:
#          fail_ci_if_error: true
